# Project Name  : FLASK BASE PROJECT
# Services Name : Backend Services API

version: '3'

volumes:
  flask_base_service_data: {}

networks:
   flask_base_service-net:
      external: false

services:
  flask_base_service:
    container_name: "flask_base_service"
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file: src/Config/Environment/DEV.env
    restart: always
    networks:
      - flask_base_service-net
    volumes:
      - .:/usr/src/app/
    command: /usr/local/bin/gunicorn -c src/Config/gunicorn_hooks_config.py --bind=0.0.0.0:5000 -w 3 --worker-class=gevent app:app --timeout 600

  flask_base_postgres_service:
    container_name: "flask_base_postgres_service"
    image: postgres:16-alpine
    restart: on-failure
    env_file: src/Config/Environment/DEV.env
    ports:
      - '7001:5432'
    networks:
      - flask_base_service-net
    volumes:
      - flask_base_service_data:/var/lib/postgresql/data

  flask_base_reverse_proxy_service:
    container_name: "flask_base_reverse_proxy_service"
    image: nginx:latest
    volumes:
      - ./src/Config/Environment/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - flask_base_service-net
    depends_on:
      - flask_base_service
    ports:
      - '8001:5000'
    restart: always
  
  flask_base_redis:
    container_name: 'flask_base_redis'
    image: "redis:alpine"
    restart: on-failure
    networks:
      - flask_base_service-net
    ports:
      - '6379:6379'
